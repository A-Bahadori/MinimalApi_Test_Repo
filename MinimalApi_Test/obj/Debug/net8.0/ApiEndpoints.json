[
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_5",
    "RelativePath": "api/admin",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_7",
    "RelativePath": "api/download/{fileName}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fileName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_10",
    "RelativePath": "api/items",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_13",
    "RelativePath": "api/items",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "item",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_11",
    "RelativePath": "api/items/{index}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "index",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_14",
    "RelativePath": "api/items/{index}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "index",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedItem",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_15",
    "RelativePath": "api/items/{index}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "index",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_12",
    "RelativePath": "api/posts/{*rest}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "rest",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MinimalApi_Test.Endpoints.ProductEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapProductEndpoints\u003Eb__0_0",
    "RelativePath": "api/products/",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MinimalApi_Test.Models.Product, MinimalApi_Test, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MinimalApi_Test.Endpoints.ProductEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapProductEndpoints\u003Eb__0_2",
    "RelativePath": "api/products/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "product",
        "Type": "MinimalApi_Test.Models.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MinimalApi_Test.Endpoints.ProductEndpoints",
    "Method": "\u003CMapProductEndpoints\u003Eg__GetProductById|0_6",
    "RelativePath": "api/products/{id:int}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetProductById"
  },
  {
    "ContainingType": "MinimalApi_Test.Endpoints.ProductEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapProductEndpoints\u003Eb__0_3",
    "RelativePath": "api/products/{id:int}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatedProduct",
        "Type": "MinimalApi_Test.Models.Product",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MinimalApi_Test.Endpoints.ProductEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapProductEndpoints\u003Eb__0_4",
    "RelativePath": "api/products/{id:int}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MinimalApi_Test.Endpoints.ProductEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapProductEndpoints\u003Eb__0_1",
    "RelativePath": "api/products/search",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "minPrice",
        "Type": "System.Nullable\u00601[[System.Decimal, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "maxPrice",
        "Type": "System.Nullable\u00601[[System.Decimal, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_4",
    "RelativePath": "api/secure",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec__DisplayClass0_0",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__8",
    "RelativePath": "api/upload",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec__DisplayClass0_0",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__9",
    "RelativePath": "api/upload-multiple",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_6",
    "RelativePath": "api/user",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MinimalApi_Test.Handlers.User.UserHandlers",
    "Method": "GetAllUsers",
    "RelativePath": "api/users/",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "MinimalApi_Test.Result.ResultCustom\u00601[[System.Collections.Generic.List\u00601[[MinimalApi_Test.DTOs.User.UserDto, MinimalApi_Test, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 500
      }
    ],
    "Tags": [
      "Users"
    ],
    "EndpointName": "GetAllUsers"
  },
  {
    "ContainingType": "MinimalApi_Test.Handlers.User.UserHandlers",
    "Method": "CreateUser",
    "RelativePath": "api/users/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createUserDto",
        "Type": "MinimalApi_Test.DTOs.User.CreateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MinimalApi_Test.Result.ResultCustom\u00601[[MinimalApi_Test.DTOs.User.UserDto, MinimalApi_Test, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 500
      }
    ],
    "Tags": [
      "Users"
    ],
    "EndpointName": "CreateUser"
  },
  {
    "ContainingType": "MinimalApi_Test.Handlers.User.UserHandlers",
    "Method": "GetUserById",
    "RelativePath": "api/users/{id:int}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MinimalApi_Test.Result.ResultCustom\u00601[[MinimalApi_Test.DTOs.User.UserDto, MinimalApi_Test, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 500
      }
    ],
    "Tags": [
      "Users"
    ],
    "EndpointName": "GetUserById"
  },
  {
    "ContainingType": "MinimalApi_Test.Handlers.User.UserHandlers",
    "Method": "UpdateUser",
    "RelativePath": "api/users/{id:int}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateUserDto",
        "Type": "MinimalApi_Test.DTOs.User.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MinimalApi_Test.Result.ResultCustom\u00601[[MinimalApi_Test.DTOs.User.UserDto, MinimalApi_Test, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 500
      }
    ],
    "Tags": [
      "Users"
    ],
    "EndpointName": "UpdateUser"
  },
  {
    "ContainingType": "MinimalApi_Test.Handlers.User.UserHandlers",
    "Method": "DeleteUser",
    "RelativePath": "api/users/{id:int}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MinimalApi_Test.Result.ResultCustom\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 404
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 500
      }
    ],
    "Tags": [
      "Users"
    ],
    "EndpointName": "DeleteUser"
  },
  {
    "ContainingType": "MinimalApi_Test.Handlers.User.UserHandlers",
    "Method": "Login",
    "RelativePath": "api/users/login",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MinimalApi_Test.Models.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MinimalApi_Test.Result.ResultCustom\u00601[[System.ValueTuple\u00602[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 500
      }
    ],
    "Tags": [
      "Users"
    ],
    "EndpointName": "ValidateCredentials"
  },
  {
    "ContainingType": "MinimalApi_Test.Handlers.User.UserHandlers",
    "Method": "SearchUsers",
    "RelativePath": "api/users/search",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchDto",
        "Type": "MinimalApi_Test.DTOs.User.SearchUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MinimalApi_Test.Result.SearchUsersResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 500
      }
    ],
    "Tags": [
      "Users"
    ],
    "EndpointName": "SearchUsers"
  }
]